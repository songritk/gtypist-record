--- gtypist-2.9.2/src/gtypist.c	2021-11-22 23:19:40.156450768 +0700
+++ /home/sk/gtypist.c	2021-11-22 23:14:45.021535340 +0700
@@ -88,6 +88,7 @@
 char *MODE_DRILL;
 char *MODE_SPEEDTEST;
 
+
 /* yes/no responses and miscellanea */
 #define	QUERY_Y			'Y'
 #define	QUERY_N			'N'
@@ -111,6 +112,10 @@
 wchar_t *YN;
 wchar_t *RNE;
 
+
+char	result_text[MAX_WIN_LINE];	 /* message buffer */
+char    LESSON[MAX_WIN_LINE];
+
 #ifdef MINGW
 #define DATADIR "lessons"
 #else
@@ -484,6 +489,8 @@
   double	best_cpm;			/* personal best speed in CPM */
   char		*raw_speed_str, *adj_speed_str, *best_speed_str;
 
+  char	text_summary[MAX_WIN_LINE];	 /* message buffer */
+
   /* calculate the speeds */
   test_time = (double)elapsed_time / (double)60.0;
   if( elapsed_time > 0 )
@@ -521,20 +528,23 @@
     ( new_best_speed? 1 : 0 );
 
   /* display everything */
-  if( cl_scoring_cpm )
+  if( cl_scoring_cpm ){
     sprintf( message, SPEED_RAW_CPM, cpm );
-  else
+  } else{
     sprintf( message, SPEED_RAW_WPM, cpm / (double)5.0 );
+  }
   move( line++, COLS - utf8len( message ) - 1 );
   ADDSTR_REV( message );
-  if( cl_scoring_cpm )
+  if( cl_scoring_cpm ) {
     sprintf( message, SPEED_ADJ_CPM, adjusted_cpm );
-  else
+  }else{
     sprintf( message, SPEED_ADJ_WPM, adjusted_cpm / (double)5.0 );
+  }
   move( line++, COLS - utf8len( message ) - 1 );
   ADDSTR_REV( message );
   sprintf( message, SPEED_PCT_ERROR,
            (double)100.0 * (double)errcount / (double)total_chars );
+  
   move( line++, COLS - utf8len( message ) - 1 );
   ADDSTR_REV( message );
   if( had_best_speed )
@@ -552,7 +562,12 @@
       ADDSTR_REV( SPEED_BEST_NEW_MSG );
     }
 #ifdef HKIM
-  gtypist_log(strip(message));
+  sprintf(text_summary," : %6.2f %6.2f %6.2f",cpm / (double)5.0 , adjusted_cpm / (double)5.0,(double)100.0 * (double)errcount / (double)total_chars );
+  if (strlen(result_text) == 0) strcpy(result_text, LESSON);
+  strcat(result_text,text_summary);
+  gtypist_log(result_text);
+  memset(result_text,0,sizeof(result_text));
+  memset(text_summary,0,sizeof(result_text));
 #endif
 }
 
@@ -696,6 +711,7 @@
   int	chars_in_the_line_typed;
   bool  seek_done = FALSE;       /* was there a seek_label before exit? */
   int	error_sync;		 /* error resync state */
+  
 
   /* note the drill type to see if we need to make the user repeat */
   drill_type = SCR_COMMAND( line );
@@ -1633,7 +1649,8 @@
     {
 #ifdef HKIM
 	    if (strncmp(line, "*:",2)==0) {
-		    gtypist_log(line);
+		    strcpy(result_text,line);
+		    strcpy(LESSON,line);
 	    }
 #endif
       command = SCR_COMMAND( line );
